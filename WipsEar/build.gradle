apply plugin: 'ear'
apply plugin: 'fordWasServer'
tasks.ear.dependsOn(':WipsUIWeb:war',':WipsWeb:war')

dependencies{
	
	deploy project(path: ':WipsUIWeb', configuration: 'archives')
	deploy project(path: ':WipsWeb', configuration: 'archives')
	earlib (project(':WipsBusiness'))
	earlib (project(':WipsCommon'))
	earlib (project(':WipsDomain'))
	earlib (project(':WipsProperties'))
	earlib ("com.ford.it.fjf:ford-rest:$fordRestVersion"){
	   transitive=false
	}
	earlib ("com.ford.it.fjf:wscore:$wscoreVersion")
	earlib ("org.apache.logging.log4j:log4j-api:$log4jApiVersion"){transitive = false} 
	earlib ("org.apache.logging.log4j:log4j-core:$log4jCoreVersion"){transitive = false} 
	earlib ("com.ford.it.fjf:cache:$fordCacheVersion") 
	earlib ("net.sf.ehcache:ehcache-core:$ehCacheVersion")
	earlib ("com.lmax:disruptor:$disruptorVersion")
}
ear{
	exclude("META-INF/application.xml")

	deploymentDescriptor{
		webModule("WipsUIWeb.war", "WipsUIWeb")
		webModule("WipsWeb.war", "WipsWeb")
		securityRole "None"
	}
	manifest{
		attributes(
			'Implementation-Title':ubuildName+"-v"+ubuildVersion+"-"+ubuildEnv,
			'Implementation-Version':ubuildVersion,
			'Implementation-Vendor':"Ford Motor Company",
			'Build-Date':getDate(),
			'Build-By':"uBuild"
		)
	}
	if (buildForHteam == true){
	   into('sharedLib') {
	       from('sharedLib')
	   }
	}
}
def getDate() {
    def date = new Date()
    def formattedDate = date.format('MMM-dd-yyyy HH:mm:ss')
    return formattedDate
}

eclipse.wtp.facet {
	facet name: 'jst.ear', version: '6.0'
	facet name: 'com.ibm.websphere.coexistence.ear', version:'8.0'
	facet name: 'com.ibm.websphere.extended.ear', version:'8.0'
}


import org.gradle.api.tasks.Exec

task gruntE2ETests(type: Exec) {
   String gruntUnitTests = "grunt e2eTest --gruntfile " + project.projectDir.getAbsolutePath() + "/../Gruntfile.js"
   commandLine = ["cmd", "/c", gruntUnitTests]
}