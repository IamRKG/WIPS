//
// Generated By:JAX-WS RI IBM 2.2.1-11/25/2013 11:48 AM(foreman)- (JAXB RI IBM 2.2.3-11/25/2013 12:35 PM(foreman)-)
//


package ford._interface.application.attachment.v1;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import ford.application.attachment.v1.ApplicationAttachmentInfoType;
import ford.application.attachment.v1.AttachmentSearchCriteriaType;
import ford.application.attachment.v1.AttachmentSearchResultsType;

@WebService(name = "IApplicationAttachment", targetNamespace = "urn:ford/interface/Application/Attachment/v1.0")
@XmlSeeAlso({
    ford._interface.application.attachment.v1.ObjectFactory.class,
    ford.application.attachment.v1.ObjectFactory.class
})
public interface IApplicationAttachment {


    /**
     * 
     *                     Upload operation persists the attachment(s) in the application specific database.
     *                     It takes the attachments specific details and returns the corresponding AttachmentID's
     *                     after the upload.
     *                 
     * 
     * @param applicationAttachmentInfo
     */
    @WebMethod(operationName = "Upload", action = "urn:ford/interface/Application/Attachment/v1.0/Upload")
    @RequestWrapper(localName = "Upload", targetNamespace = "urn:ford/interface/Application/Attachment/v1.0", className = "ford._interface.application.attachment.v1.Upload")
    @ResponseWrapper(localName = "UploadResponse", targetNamespace = "urn:ford/interface/Application/Attachment/v1.0", className = "ford._interface.application.attachment.v1.UploadResponse")
    public void upload(
        @WebParam(name = "ApplicationAttachmentInfo", targetNamespace = "urn:ford/Application/Attachment/v1.0", mode = WebParam.Mode.INOUT)
        Holder<ApplicationAttachmentInfoType> applicationAttachmentInfo);

    /**
     * 
     * 				Update operation updates the attachment(s) in the application specific database.
     * 				It takes the application specific attachments ID's and updates the same.
     * 		    
     * 
     * @param applicationAttachmentInfo
     */
    @WebMethod(operationName = "Update", action = "urn:ford/interface/Application/Attachment/v1.0/Update")
    @RequestWrapper(localName = "Update", targetNamespace = "urn:ford/interface/Application/Attachment/v1.0", className = "ford._interface.application.attachment.v1.Update")
    @ResponseWrapper(localName = "UpdateResponse", targetNamespace = "urn:ford/interface/Application/Attachment/v1.0", className = "ford._interface.application.attachment.v1.UpdateResponse")
    public void update(
        @WebParam(name = "ApplicationAttachmentInfo", targetNamespace = "urn:ford/Application/Attachment/v1.0", mode = WebParam.Mode.INOUT)
        Holder<ApplicationAttachmentInfoType> applicationAttachmentInfo);

    /**
     * 
     * 				Download operation downloads the attachment(s) from application specific database.
     * 				It takes the application specific attachments ID's to download them.
     * 		    
     * 
     * @param applicationAttachmentInfo
     */
    @WebMethod(operationName = "Download", action = "urn:ford/interface/Application/Attachment/v1.0/Download")
    @RequestWrapper(localName = "Download", targetNamespace = "urn:ford/interface/Application/Attachment/v1.0", className = "ford._interface.application.attachment.v1.Download")
    @ResponseWrapper(localName = "DownloadResponse", targetNamespace = "urn:ford/interface/Application/Attachment/v1.0", className = "ford._interface.application.attachment.v1.DownloadResponse")
    public void download(
        @WebParam(name = "ApplicationAttachmentInfo", targetNamespace = "urn:ford/Application/Attachment/v1.0", mode = WebParam.Mode.INOUT)
        Holder<ApplicationAttachmentInfoType> applicationAttachmentInfo);

    /**
     * 
     * 				Delete operation deletes the attachment(s) from application specific database.
     * 				It takes the application specific attachments ID's to delete them.
     * 		    
     * 
     * @param applicationAttachmentInfo
     */
    @WebMethod(operationName = "Delete", action = "urn:ford/interface/Application/Attachment/v1.0/Delete")
    @RequestWrapper(localName = "Delete", targetNamespace = "urn:ford/interface/Application/Attachment/v1.0", className = "ford._interface.application.attachment.v1.Delete")
    @ResponseWrapper(localName = "DeleteResponse", targetNamespace = "urn:ford/interface/Application/Attachment/v1.0", className = "ford._interface.application.attachment.v1.DeleteResponse")
    public void delete(
        @WebParam(name = "ApplicationAttachmentInfo", targetNamespace = "urn:ford/Application/Attachment/v1.0", mode = WebParam.Mode.INOUT)
        Holder<ApplicationAttachmentInfoType> applicationAttachmentInfo);

    /**
     * 
     * @param attachmentSearchCriteria
     * @return
     *     returns ford.application.attachment.v1.AttachmentSearchResultsType
     */
    @WebMethod(operationName = "Search", action = "urn:ford/interface/Application/Attachment/v1.0/Search")
    @WebResult(name = "AttachmentSearchResults", targetNamespace = "urn:ford/Application/Attachment/v1.0")
    @RequestWrapper(localName = "Search", targetNamespace = "urn:ford/interface/Application/Attachment/v1.0", className = "ford._interface.application.attachment.v1.Search")
    @ResponseWrapper(localName = "SearchResponse", targetNamespace = "urn:ford/interface/Application/Attachment/v1.0", className = "ford._interface.application.attachment.v1.SearchResponse")
    public AttachmentSearchResultsType search(
        @WebParam(name = "AttachmentSearchCriteria", targetNamespace = "urn:ford/Application/Attachment/v1.0")
        AttachmentSearchCriteriaType attachmentSearchCriteria);

}
